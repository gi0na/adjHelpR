% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unfolded_temporal_nets.R
\name{get_unfolded_layout}
\alias{get_unfolded_layout}
\title{Generate the ggraph layout of a time unfolded graph}
\usage{
get_unfolded_layout(
  edge.list,
  select_cols = NULL,
  nodes = NULL,
  vertical = FALSE,
  resize_ratio = NULL,
  enlarge_ratio = 1,
  ...
)
}
\arguments{
\item{edge.list}{data.frame or tibble containing the edge list. It needs at
least three column: the column with edge sources, the edge targets, and the
timestamps of each edge. The order of columns should be 'timestamp',
'source', 'target'. If the edge.list columns come in different orders, use
`select_cols` to specify the right order. See the example for details.}

\item{select_cols}{optional vector of 3 (2 for multi-graphs) elements
specifying which columns are the source,target, and attributes from which
building the graph. Otherwise Column 1 is assumed to be the source, column
2 the target, column 3 the attribute. In the case of multi-graphs, the
third element is not needed and the number of edges between each pair of
vertices is computed according to '\code{aggr_expression}'.}

\item{nodes}{optional vector containing all node names in case disconnected
nodes should be included.}

\item{vertical}{unfold vertically or horizontally? Defaults to FALSE
(horizontal)}

\item{resize_ratio}{ratio between horizontal and vertical dimensions of the grid layout.
value < 1 gives a longer vertical side, >1 longer horizontal side.}

\item{enlarge_ratio}{enlarge both y and x axis by this parameter. Defaults is 1.}

\item{...}{extra parameters passed to internal methods}
}
\value{
ggraph layout object to plot the time unfolded network
}
\description{
Generate the ggraph layout of a time unfolded graph
}
\examples{
el <- data.frame(
from = c('A','B',  'A','B','B',   'A','C','C',    'A','B','C',    'D'),
to   = c('C','C',  'C','C','D',   'C','D','E',    'C','C','E',    'E'),
ts   = c( 1,  1,    2,  2,  2,     3,  3,  3,      4,  4,  4,      6)
)
get_unfolded_adjacency(el, select_cols = 1:3)
}
